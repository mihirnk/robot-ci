# Extract usernames from EMAIL_ADDRESS and create users

# Install custom MOTD
INSTALL "./motd" "/etc/motd"
RUN bash -c "[ -f /etc/motd ] && cp /etc/motd /etc/motd.backup"

# Then create and run the script that reads from the file
RUN bash -c 'cat > /tmp/create_users.sh << "EOFSCRIPT"
#!/bin/bash
set -e

source /tmp/.env

if [ -z "${EMAIL_ADDRESS}" ]; then
    echo "EMAIL_ADDRESS: ${EMAIL_ADDRESS}"
    echo "Warning: No email addresses found in configuration. No users will be created."
    exit 0
fi

if [ -z "${ADMINPASSWORD}" ]; then
    echo "ADMINPASSWORD: ${ADMINPASSWORD}"
    echo "Warning: No admin password found in configuration. No users will be created."
    exit 0
fi

if [ -z "${OTHERUSERSPASSWORD}" ]; then
    echo "OTHERUSERSPASSWORD: ${OTHERUSERSPASSWORD}"
    echo "Warning: No user password found in configuration. No users will be created."
    exit 0
fi

# Function to setup MOTD for a user
setup_motd_for_user() {
    local username="$1"
    [ -f /etc/motd ] && ln -sf /etc/motd /home/${username}/.motd
    [ -f /home/${username}/.motd ] && echo "source /home/${username}/.motd" >> /home/${username}/.bash_profile
    echo "MOTD setup completed for user ${username}"
}

# Function to add user to groups (only if they exist)
add_user_to_groups() {
    local username="$1"
    local groups_to_add=()

    # Check each group and only add if it exists
    for group in dialout i2c spi gpio; do
        if getent group "$group" &>/dev/null; then
            groups_to_add+=("$group")
        fi
    done

    # Add user to all existing groups
    if [ ${#groups_to_add[@]} -gt 0 ]; then
        local groups_string=$(IFS=,; echo "${groups_to_add[*]}")
        usermod -aG "$groups_string" "$username"
        echo "Added $username to groups: $groups_string"
    fi
}

# Create dedicated admin recovery account first
echo "Creating admin recovery account..."
id -u "admin" &>/dev/null || useradd -m -s /bin/bash "admin"
usermod -aG sudo "admin"
echo "admin:${ADMINPASSWORD}" | chpasswd
add_user_to_groups "admin"

# Setup MOTD for admin user
setup_motd_for_user "admin"

# Add admin to AllowUsers in sshd_config for SSH access
if ! grep -q "^AllowUsers.*\badmin\b" /etc/ssh/sshd_config; then
    if grep -q "^AllowUsers" /etc/ssh/sshd_config; then
        sed -i "s/^AllowUsers.*/& \badmin\b/" /etc/ssh/sshd_config
    else
        echo "AllowUsers admin" >> /etc/ssh/sshd_config
    fi
fi
echo "Admin recovery account created successfully"

IFS="," read -ra emails <<< "${EMAIL_ADDRESS}"
for i in "${!emails[@]}"; do
    if [ -z "${emails[$i]}" ]; then
        continue
    fi
    
    username=$(echo "${emails[$i]}" | cut -d@ -f1)
    if [ -z "$username" ]; then
        echo "Warning: Could not extract username from ${emails[$i]}"
        continue
    fi
    
    # Create user if it does not exist
    id -u "${username}" &>/dev/null || useradd -m -s /bin/bash "${username}"
    
    # First email is admin (sudoer), others are regular users
    if [ $i -eq 0 ]; then
        groups "${username}" | grep -q sudo || usermod -aG sudo "${username}"
        # Set admin password
        echo "${username}:${ADMINPASSWORD}" | chpasswd
    else
        # Set regular user password
        echo "${username}:${OTHERUSERSPASSWORD}" | chpasswd
    fi

    # Add all users to hardware access groups (only those that exist)
    add_user_to_groups "${username}"

    # Setup MOTD for this user
    setup_motd_for_user "${username}"
    
    # Add user to AllowUsers in sshd_config for SSH access
    if ! grep -q "^AllowUsers.*${username}" /etc/ssh/sshd_config; then
        if grep -q "^AllowUsers" /etc/ssh/sshd_config; then
            sed -i "s/^AllowUsers.*/& ${username}/" /etc/ssh/sshd_config
        else
            echo "AllowUsers ${username}" >> /etc/ssh/sshd_config
        fi
    fi

    echo "User ${username} created successfully"
done

EOFSCRIPT

chmod +x /tmp/create_users.sh && /tmp/create_users.sh'
